# Generated by Django 5.0.1 on 2024-05-12 08:38

import autoslug.fields
import django.db.models.deletion
import sortedm2m.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('student_performance', '0001_initial'),
        ('student_work', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.PositiveIntegerField(verbose_name='Номер аудитории')),
                ('floor', models.PositiveSmallIntegerField(verbose_name='Этаж')),
                ('number_of_seats', models.PositiveIntegerField(verbose_name='Количество посадочных мест')),
                ('number_of_computers', models.PositiveIntegerField(verbose_name='Количество компьютеров')),
                ('campus', models.PositiveSmallIntegerField(default=1, verbose_name='Номер корпуса')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='get_url', unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Аудитория',
                'verbose_name_plural': 'Аудитории',
            },
        ),
        migrations.CreateModel(
            name='NonWorkingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=100, verbose_name='Причина')),
                ('date', models.DateField(verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Не рабочий день',
                'verbose_name_plural': 'Не рабочие дни',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Начало экзамена')),
                ('end_time', models.TimeField(verbose_name='Конец экзамена')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.classroom', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_group', to='student_performance.group', verbose_name='Группа')),
                ('lecturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exam_lecturer', to='student_performance.lecturer', verbose_name='Преподаватель')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_subject', to='student_performance.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_topic', models.CharField(blank=True, max_length=200, null=True, verbose_name='Тема занятия')),
                ('lesson_number', models.PositiveIntegerField(blank=True, null=True, verbose_name='Порядковый номер пары')),
                ('type_of_lesson', models.CharField(choices=[('пз', 'практическое занятие'), ('лк', 'лекционное занятие'), ('с', 'семинар')], default='лк', max_length=50, verbose_name='Тип занятия')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.classroom', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_group', to='student_performance.group', verbose_name='Группа')),
                ('lecturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_lecturer', to='student_performance.lecturer', verbose_name='Преподаватель')),
                ('quest', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='student_work.quest', verbose_name='Задания')),
                ('student_scores', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='student_performance.student_scores', verbose_name='Баллы')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_subject', to='student_performance.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Пара',
                'verbose_name_plural': 'Пары',
            },
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('number_of_lesson', models.PositiveIntegerField(verbose_name='Общее число пар')),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, null=True, populate_from='get_url', unique=True, verbose_name='URL')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_group', to='student_performance.group', verbose_name='Группа')),
                ('lecturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journal_lecturer', to='student_performance.lecturer', verbose_name='Преподаватель')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_subject', to='student_performance.subject', verbose_name='Дисциплина')),
                ('lessons', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='timetable.lesson', verbose_name='Пары')),
            ],
            options={
                'verbose_name': 'Журнал',
                'verbose_name_plural': 'Журналы',
            },
        ),
        migrations.CreateModel(
            name='PracticeTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название практики')),
                ('start_date', models.DateField(verbose_name='Дата начала практики')),
                ('end_date', models.DateField(verbose_name='Дата конца практики')),
                ('industrial_practice', models.BooleanField(default=False, verbose_name='Производственная практика')),
                ('document', models.FileField(blank=True, null=True, upload_to='accompanying_document/%Y/%m/%d/', verbose_name='Сопроводительный документ')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_group', to='student_performance.group', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Практика',
                'verbose_name_plural': 'Практики',
            },
        ),
        migrations.CreateModel(
            name='Study_Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(db_index=True, max_length=200, verbose_name='Название учебного плана')),
                ('term', models.PositiveSmallIntegerField(default=1, verbose_name='Семестр')),
                ('number_of_hours', models.PositiveIntegerField(verbose_name='Количество часов')),
                ('last_work', models.CharField(choices=[('Не предусмотрено', 'Не предусмотрено'), ('Экзамен', 'Экзамен'), ('Зачет', 'Зачет')], default='Не предусмотрено', max_length=50, verbose_name='Экзамен/Зачет')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_plan_subject', to='student_performance.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Учебный план',
                'verbose_name_plural': 'Учебные планы',
            },
        ),
        migrations.CreateModel(
            name='TimetableChanges',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_number', models.PositiveIntegerField(default=1, verbose_name='Номер пары')),
                ('start_time', models.TimeField(verbose_name='Начало пары')),
                ('end_time', models.TimeField(verbose_name='Конец пары')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.classroom', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes_group', to='student_performance.group', verbose_name='Группа')),
                ('lecturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changes_lecturer', to='student_performance.lecturer', verbose_name='Преподаватель')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='changes_subject', to='student_performance.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Расписание замен',
                'verbose_name_plural': 'Расписание замен',
            },
        ),
        migrations.CreateModel(
            name='TimetableOfClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_number', models.PositiveIntegerField(default=1, verbose_name='Номер пары')),
                ('start_time', models.TimeField(verbose_name='Начало пары')),
                ('end_time', models.TimeField(verbose_name='Конец пары')),
                ('evenness', models.CharField(choices=[('четная', 'четная'), ('нечетная', 'нечетная'), ('совмещенная', 'совмещенная')], default='совмещенная', max_length=30, verbose_name='Четность недели')),
                ('day_of_the_week', models.CharField(choices=[('понедельник', 'понедельник'), ('вторник', 'вторник'), ('среда', 'среда'), ('четверг', 'четверг'), ('пятница', 'пятница'), ('суббота', 'суббота')], max_length=30, verbose_name='День недели')),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='timetable.classroom', verbose_name='Аудитория')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_group', to='student_performance.group', verbose_name='Группа')),
                ('lecturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timetable_lecturer', to='student_performance.lecturer', verbose_name='Преподаватель')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetable_subject', to='student_performance.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Расписание занятий',
                'verbose_name_plural': 'Расписание занятий',
            },
        ),
    ]
